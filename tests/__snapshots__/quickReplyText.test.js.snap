// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quick reply: text message Invalid message Message contains additional properties 1`] = `
Array [
  Object {
    "dataPath": "",
    "keyword": "additionalProperties",
    "message": "should NOT have additional properties",
    "params": Object {
      "additionalProperty": "invalid",
    },
    "schemaPath": "#/additionalProperties",
  },
]
`;

exports[`Quick reply: text message Invalid message Message contains invalid image_url property 1`] = `
Array [
  Object {
    "dataPath": "/image_url",
    "keyword": "format",
    "message": "should match format \\"url\\"",
    "params": Object {
      "format": "url",
    },
    "schemaPath": "#/properties/image_url/format",
  },
]
`;

exports[`Quick reply: text message Invalid message Message contains invalid payload type 1`] = `
Array [
  Object {
    "dataPath": "/payload",
    "keyword": "type",
    "message": "should be string",
    "params": Object {
      "type": "string",
    },
    "schemaPath": "#/properties/payload/anyOf/0/type",
  },
  Object {
    "dataPath": "/payload",
    "keyword": "type",
    "message": "should be number",
    "params": Object {
      "type": "number",
    },
    "schemaPath": "#/properties/payload/anyOf/1/type",
  },
  Object {
    "dataPath": "/payload",
    "keyword": "anyOf",
    "message": "should match some schema in anyOf",
    "params": Object {},
    "schemaPath": "#/properties/payload/anyOf",
  },
]
`;

exports[`Quick reply: text message Invalid message Message has a content_type which is invalid 1`] = `
Array [
  Object {
    "dataPath": "/content_type",
    "keyword": "enum",
    "message": "should be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "text",
      ],
    },
    "schemaPath": "#/properties/content_type/enum",
  },
]
`;

exports[`Quick reply: text message Invalid message Message has a content_type which is not a string 1`] = `
Array [
  Object {
    "dataPath": "/content_type",
    "keyword": "type",
    "message": "should be string",
    "params": Object {
      "type": "string",
    },
    "schemaPath": "#/properties/content_type/type",
  },
  Object {
    "dataPath": "/content_type",
    "keyword": "enum",
    "message": "should be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "text",
      ],
    },
    "schemaPath": "#/properties/content_type/enum",
  },
]
`;

exports[`Quick reply: text message Invalid message Message is missing a content_type property 1`] = `
Array [
  Object {
    "dataPath": "",
    "keyword": "required",
    "message": "should have required property 'content_type'",
    "params": Object {
      "missingProperty": "content_type",
    },
    "schemaPath": "#/required",
  },
]
`;

exports[`Quick reply: text message Invalid message Message payload is greater than 1000 characters 1`] = `
Array [
  Object {
    "dataPath": "/payload",
    "keyword": "maxLength",
    "message": "should NOT be longer than 1000 characters",
    "params": Object {
      "limit": 1000,
    },
    "schemaPath": "#/properties/payload/anyOf/0/maxLength",
  },
  Object {
    "dataPath": "/payload",
    "keyword": "type",
    "message": "should be number",
    "params": Object {
      "type": "number",
    },
    "schemaPath": "#/properties/payload/anyOf/1/type",
  },
  Object {
    "dataPath": "/payload",
    "keyword": "anyOf",
    "message": "should match some schema in anyOf",
    "params": Object {},
    "schemaPath": "#/properties/payload/anyOf",
  },
]
`;

exports[`Quick reply: text message Invalid message Message title is greater than 20 characters 1`] = `
Array [
  Object {
    "dataPath": "/title",
    "keyword": "maxLength",
    "message": "should NOT be longer than 20 characters",
    "params": Object {
      "limit": 20,
    },
    "schemaPath": "#/properties/title/maxLength",
  },
]
`;
